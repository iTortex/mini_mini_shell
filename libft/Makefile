SRC = get_next_line.c ft_strlen.c ft_atoi.c ft_bzero.c ft_calloc.c ft_isalnum.c ft_isalpha.c ft_memset.c ft_memccpy.c ft_memmove.c ft_memchr.c ft_memcmp.c ft_memcpy.c ft_memmove.c ft_putchar_fd.c ft_putendl_fd.c ft_putnbr_fd.c ft_putstr_fd.c ft_split.c ft_strchr.c ft_strdup.c ft_strjoin.c ft_strlcat.c ft_strlcpy.c ft_strmapi.c ft_strncmp.c ft_strnstr.c ft_strrchr.c ft_strtrim.c ft_substr.c ft_tolower.c ft_toupper.c ft_atoi.c ft_isascii.c ft_isdigit.c ft_isprint.c ft_itoa.c
SRC_BONUS = ft_lstadd_back.c ft_lstadd_front.c ft_lstclear.c ft_lstdelone.c ft_lstiter.c ft_lstlast.c ft_lstmap.c ft_lstnew.c ft_lstsize.c
OBJ = $(SRC:.c=.o)
OBJ_BONUS = ft_lstadd_back.o ft_lstadd_front.o ft_lstclear.o ft_lstdelone.o ft_lstiter.o ft_lstlast.o ft_lstmap.o ft_lstnew.o ft_lstsize.o
NAME = libft.a

all: $(NAME)

$(NAME): $(OBJ) $(OBJ_BONUS)
	ar rc libft.a $(OBJ) $(OBJ_BONUS)
	ranlib libft.a

%.o: %.c
	clang -Wall -g -Wextra -Werror -D BUFFER_SIZE=8 -o $@ -c $<

bonus: $(OBJ) $(OBJ_BONUS)
	ar rc libft.a $(OBJ) $(OBJ_BONUS)
	ranlib libft.a
	
clean:
	/bin/rm -f $(OBJ) $(OBJ_BONUS)

fclean: clean
	/bin/rm -f libft.a

re: fclean all

.PHONY: all clean fclean re bonus
